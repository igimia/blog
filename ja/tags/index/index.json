[{"content":"経緯 今までメモがてら使っていたサイトの閉鎖に伴い、いよいよ自分で作ることを決意。\nGitHub Pagesを使うとタダ！でできるのでそれでやってみる。\n静的サイトジェネレータはいくつかあったが、お試しでHUGOでやってみた。\n作ってみる インストール, サンプル起動 公式の手順を見ながら構築していく\n1 2 3 4 5 6 7  $ brew install hugo $ hugo version # -\u0026gt; Hugo Static Site Generator v0.76.3/extended darwin/amd64 BuildDate: unknown $ hugo new site quickstart $ cd quickstart $ git init   themeは公式から自分の気に入るのを探してsubmodule化して追加する（zzoを利用することにした）。\n1  $ git submodule add https://github.com/zzossig/hugo-theme-zzo.git themes/zzo   もうblogを立ち上げられるらしい。\n試しに立ち上げてみる\n1 2 3 4 5  $ cd themes/zzo/exampleSite $ hugo server --themesDir ../.. # Serving pages from memory # Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender # Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)   http://localhost:1313/にアクセスしたら公式のthemeと同じものが出てきた。しゅごい\u0026hellip;\nCI/CDを設定する GitHub Actionを使い、ビルド〜デプロイを自動でやってもらうようにする。\nここを見ながらこんな感じのCIを作成した。\ngh-pagesブランチにpushすると発火し、mainブランチにデプロイされる。\nname: github pages on: push: branches: - gh-pages # 発火させたいブランチ名を設定 jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: latest extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }} publish_dir: ./public publish_branch: main # デプロイ対象のブランチ名を設定 GitHub Actionを利用するのは初めてだったが\u0026hellip;少し詰まった\n GitHub_Token を利用すると初回デプロイに必ず失敗する\n公式にも説明があるが、GitHub_Tokenには利用するのに制限があるらしく、初回デプロイ時に失敗するらしい。\n正直よくわらからなかったと、deploy_keyを利用してSSH経由でpushすればそういう制限はないらしいので使うのをやめた。 ACTIONS_DEPLOY_KEY の利用に失敗する\nSecretsに登録した変数の名前を変えたらデプロイに失敗した。GitHub Pages専用変数のようなので名前を変えてはいけないよう。  自分好みにカスタマイズする 準備 Zzo公式に細かい設定が書いてある。が、一旦テンプレートをそのまま利用するのでカスタマイズする前にthemes/zzo/exampleSite/配下をrootにまるっとコピーしておくと良い。\nZzoの公式に全て書いてあるが\u0026hellip;今回私がカスタマイズしたところはこのあたり。\nホーム画面  タイトル,サブタイトルの変更\ncontent/en/_index.md このファイルをいじると色々カスタムできる。\nenは使う言語に応じて設定を修正する（まだjp設定できていないので一旦en配下を修正した）。  プロフィール   アバターの変更\nstatic/images/whoami/avatar.jpeg のファイルを適用したいものに差し替える\n  名前、プロフィール文の変更\nconfig/_default/params.tomlファイルを修正する。\n名前やプロフィール、SNSへのリンク先はwhoamiあたりを修正するとよい。\n  言語   デフォルト言語の変更\nデフォルトは英語なので日本語に設定変更する。\n1  defaultContentLanguage = \u0026#34;ja\u0026#34;     言語の設定にjaを加える\n1 2 3 4  [ja] title = \u0026#34;Hugo Zzo Theme\u0026#34; languageName = \u0026#34;日本語\u0026#34; weight = 1     content/[言語] のコピー\n上記の設定だけではエラーが出てきた。\ncontentなど言語ごとにフォルダが分かれているものがあったのでja用を作成する。\n1  $ cp content/en content/ja   何も表示されない。まだ何か足りないらしい。\n  config配下にmenus.en.tomlがあった。\n細かいチューニングは置いといて、一旦Copy、Renameしてそのままjaファイルとする。\n1  $ cp -a config/_default/menus.en.toml config/_default/menus.ja.toml     コンテンツ表示された。心なしかあひるも少し嬉しそう。\n  表示言語切り替え機能の無効化\n英語はしばらく使うことなさそうだがそのうち英語でも\u0026hellip;という日が来るかもしれないのでそのままにしておくことにする。\nその間表示言語の切り替え機能は無効化しておく。\n1 2 3 4 5 6  # footer showPoweredBy = true showFeedLinks = true showSocialLinks = true enableLangChange = false # ここを修正 enableThemeChange = true     参考 構築時にとても参考になりました。\n  GitHub Pages × Hugo で技術ブログを始めた: https://reona.dev/posts/20200331\n  Hugoで記事内に画像を貼り付ける方法 : https://qiita.com/atuyosi/items/4100bd502e373c088c74\n  Hugo(quickstart) : https://gohugo.io/getting-started/quick-start/\n  GitHubAction(GitHubPages, Hugo) : https://github.com/peaceiris/actions-gh-pages\n  ","description":"hugo, github","id":2,"section":"posts","tags":["hugo","github"],"title":"Hugo + GithubPages でブログを構築する","uri":"https://www.anypalette.com/ja/posts/1012_first_post/"},{"content":"決済系SIerとして大規模クレジットカード決済システムの保守/運用, 維持開発に4年従事してました。その後一般事務のお仕事を何年かしましたが、訳があったのとご縁に恵まれ再びIT業界でお仕事させていただくことになりました。\n現在はキャッシュレス決済システムの開発・運用のお仕事をしています。\nサーバサイド~インフラがメインです。フロントも好きです。\n 言語：Java, Go, Javascript, VB クラウド：AWS その他：Kubernetes, MySQL, MongoDB(DynamoDB) 等  ","description":"Hugo, the world’s fastest framework for building websites","id":3,"section":"","tags":null,"title":"About","uri":"https://www.anypalette.com/ja/about/"}]